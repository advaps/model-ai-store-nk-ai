// TFLite Models Data converted from CSV

// Function to generate appropriate images for each model type
const getModelImage = (name, category) => {
  const lowerName = name.toLowerCase();
  
  // Face detection models
  if (lowerName.includes('face') || lowerName.includes('facedetector')) {
    return "https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=400&h=300&fit=crop";
  }
  
  // Security and surveillance models
  if (lowerName.includes('intrusion') || lowerName.includes('anomaly') || lowerName.includes('surveillance')) {
    return "https://images.unsplash.com/photo-1449965408869-eaa3f722e40d?w=400&h=300&fit=crop";
  }
  
  // Healthcare and monitoring models
  if (lowerName.includes('fall') || lowerName.includes('health') || lowerName.includes('elderly') || lowerName.includes('sleep')) {
    return "https://images.unsplash.com/photo-1571741755707-5d25de3b6cb2?w=400&h=300&fit=crop";
  }
  
  // Child and pet monitoring
  if (lowerName.includes('child') || lowerName.includes('cry') || lowerName.includes('pet')) {
    return "https://images.unsplash.com/photo-1544005313-94ddf0286df2?w=400&h=300&fit=crop";
  }
  
  // Fire and safety models
  if (lowerName.includes('fire') || lowerName.includes('smoke') || lowerName.includes('gas')) {
    return "https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=400&h=300&fit=crop";
  }
  
  // Door and access control
  if (lowerName.includes('door') || lowerName.includes('access') || lowerName.includes('unlock')) {
    return "https://images.unsplash.com/photo-1559827260-dc66d52bef19?w=400&h=300&fit=crop";
  }
  
  // Object detection models
  if (lowerName.includes('object') || lowerName.includes('detection') || lowerName.includes('ssd') || lowerName.includes('mobilenet')) {
    return "https://images.unsplash.com/photo-1449965408869-eaa3f722e40d?w=400&h=300&fit=crop";
  }
  
  // Traffic and vehicle models
  if (lowerName.includes('vehicle') || lowerName.includes('traffic') || lowerName.includes('parking') || lowerName.includes('anpr')) {
    return "https://images.unsplash.com/photo-1449824913935-59a10b8d2000?w=400&h=300&fit=crop";
  }
  
  // Construction and industrial safety
  if (lowerName.includes('construction') || lowerName.includes('worker') || lowerName.includes('ppe') || lowerName.includes('industrial')) {
    return "https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=400&h=300&fit=crop";
  }
  
  // Crowd and public safety
  if (lowerName.includes('crowd') || lowerName.includes('public') || lowerName.includes('protest')) {
    return "https://images.unsplash.com/photo-1449965408869-eaa3f722e40d?w=400&h=300&fit=crop";
  }
  
  // Weather and environmental
  if (lowerName.includes('weather') || lowerName.includes('flood') || lowerName.includes('waterlogging')) {
    return "https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=400&h=300&fit=crop";
  }
  
  // Wildlife and animal detection
  if (lowerName.includes('animal') || lowerName.includes('wild')) {
    return "https://images.unsplash.com/photo-1449965408869-eaa3f722e40d?w=400&h=300&fit=crop";
  }
  
  // Infrastructure monitoring
  if (lowerName.includes('streetlight') || lowerName.includes('infrastructure')) {
    return "https://images.unsplash.com/photo-1449965408869-eaa3f722e40d?w=400&h=300&fit=crop";
  }
  
  // Default images based on category
  if (category === "Indoor") {
    return "https://images.unsplash.com/photo-1559827260-dc66d52bef19?w=400&h=300&fit=crop";
  } else if (category === "Outdoor") {
    return "https://images.unsplash.com/photo-1449965408869-eaa3f722e40d?w=400&h=300&fit=crop";
  }
  
  // Fallback image
  return "https://images.unsplash.com/photo-1516116216624-53e697fedbea?w=400&h=300&fit=crop";
};

export const tfliteModelsData = [
  // Indoor Models
  {
    name: "MediaPipe FaceDetector",
    description: "Face detection TFLite model optimized for real-time recognition.",
    image: getModelImage("MediaPipe FaceDetector", "Indoor"),
    videoUrl: null,
    downloadUrl: "https://huggingface.co/qualcomm/MediaPipe-Face-Detection/blob/main/FaceDetector.tflite",
    rating: 4.5,
    downloads: "850K",
    category: "Indoor",
    updated: "1 day ago",
    size: "2.1MB",
    featured: false,
    detailedDescription: "Face detection TFLite model optimized for real-time recognition.",
    useCases: ["Face recognition for door unlock", "Security systems", "Access control", "Biometric authentication"],
    features: ["Real-time detection", "High accuracy", "Mobile optimized", "Lightweight"],
    githubUrl: "https://huggingface.co/qualcomm/MediaPipe-Face-Detection",
    demoReference: "MediaPipe Face Detection"
  },
  {
    name: "Multi-factor Access System",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Multi-factor Access System", "Indoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Indoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Multi-factor access (face + badge + gesture)", "Security systems", "Access control"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "SSD Lite MobileNet-V1 Quantized (COCO)",
    description: "General object detection model, can detect people for stranger alerts.",
    image: getModelImage("SSD Lite MobileNet-V1 Quantized (COCO)", "Indoor"),
    videoUrl: null,
    downloadUrl: "https://storage.googleapis.com/download.tensorflow.org/models/tflite/coco_ssd_mobilenet_v1_1.0_quant_2018_06_29.zip",
    rating: 4.4,
    downloads: "1.1M",
    category: "Indoor",
    updated: "2 days ago",
    size: "18MB",
    featured: false,
    detailedDescription: "General object detection model, can detect people for stranger alerts.",
    useCases: ["Stranger alert (unknown person entry)", "Object detection", "Surveillance", "Security systems"],
    features: ["Real-time detection", "Multi-object support", "High precision", "Robust performance"],
    githubUrl: null,
    demoReference: "TensorFlow sample model"
  },
  {
    name: "DoorOpenDetection TFLite",
    description: "Custom TFLite model trained via Teachable Machine to detect door open/closed states.",
    image: getModelImage("DoorOpenDetection TFLite", "Indoor"),
    videoUrl: null,
    downloadUrl: "https://github.com/hkrob/DoorOpenDetectionTFlite",
    rating: 4.2,
    downloads: "320K",
    category: "Indoor",
    updated: "1 week ago",
    size: "15MB",
    featured: false,
    detailedDescription: "Custom TFLite model trained via Teachable Machine to detect door open/closed states.",
    useCases: ["Door/Window open detection", "Security monitoring", "Home automation", "Access control"],
    features: ["Custom trained", "Binary classification", "Real-time detection", "Easy integration"],
    githubUrl: "https://github.com/hkrob/DoorOpenDetectionTFlite",
    demoReference: "GitHub hkrob/DoorOpenDetectionTFlite"
  },
  {
    name: "Custom Object Detector (Model Maker)",
    description: "Custom-trained detector using EfficientDet-Lite models for package/person detection.",
    image: getModelImage("Custom Object Detector (Model Maker)", "Indoor"),
    videoUrl: null,
    downloadUrl: "https://github.com/TannerGilbert/TFLite-Object-Detection-with-TFLite-Model-Maker",
    rating: 4.3,
    downloads: "450K",
    category: "Indoor",
    updated: "3 days ago",
    size: "25MB",
    featured: false,
    detailedDescription: "Custom-trained detector using EfficientDet-Lite models for package/person detection.",
    useCases: ["Package delivery detection (courier at door)", "Object detection", "Surveillance", "Security systems"],
    features: ["Custom trained", "EfficientDet-Lite based", "High accuracy", "Real-time detection"],
    githubUrl: "https://github.com/TannerGilbert/TFLite-Object-Detection-with-TFLite-Model-Maker",
    demoReference: "GitHub TannerGilbert/TFLite-Object-Detection-with-TFLite-Model-Maker"
  },
  {
    name: "Fall Detection Model",
    description: "TFLite model for recognizing elderly falls.",
    image: getModelImage("Fall Detection Model", "Indoor"),
    videoUrl: null,
    downloadUrl: "https://huggingface.co/Siddhartha276/Fall_Detection/blob/main/fall_detection_model.tflite",
    rating: 4.6,
    downloads: "680K",
    category: "Indoor",
    updated: "2 days ago",
    size: "12MB",
    featured: false,
    detailedDescription: "TFLite model for recognizing elderly falls.",
    useCases: ["Fall detection (elderly care)", "Healthcare monitoring", "Safety systems", "Elderly care"],
    features: ["Fall detection", "Real-time monitoring", "High accuracy", "Healthcare focused"],
    githubUrl: "https://huggingface.co/Siddhartha276/Fall_Detection",
    demoReference: "Hugging Face Siddhartha276"
  },
  {
    name: "Heart-attack/Abnormal Motion Alert",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Heart-attack/Abnormal Motion Alert", "Indoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Indoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Heart-attack/abnormal motion alert", "Healthcare monitoring", "Emergency detection"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "Sleep Pattern Monitoring",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Sleep Pattern Monitoring", "Indoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Indoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Sleep pattern monitoring (restless sleep, apnea)", "Healthcare monitoring", "Sleep analysis"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "Cry Detection",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Cry Detection", "Indoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Indoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Cry detection (infants/kids)", "Baby monitoring", "Audio analysis", "Childcare"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "Sudden Collapse Detection",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Sudden Collapse Detection", "Indoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Indoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Sudden collapse detection (seizures, faints)", "Healthcare monitoring", "Emergency detection"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "Fire Detection CNN",
    description: "TensorFlow Lite CNN for fire/smoke detection.",
    image: getModelImage("Fire Detection CNN", "Indoor"),
    videoUrl: null,
    downloadUrl: "https://github.com/edwios/fire-detection-cnn-tflite",
    rating: 4.4,
    downloads: "520K",
    category: "Indoor",
    updated: "4 days ago",
    size: "8MB",
    featured: false,
    detailedDescription: "TensorFlow Lite CNN for fire/smoke detection.",
    useCases: ["Smoke/fire detection in kitchen", "Fire safety", "Surveillance", "Emergency detection"],
    features: ["CNN architecture", "Fire/smoke detection", "Real-time monitoring", "High accuracy"],
    githubUrl: "https://github.com/edwios/fire-detection-cnn-tflite",
    demoReference: "GitHub edwios/fire-detection-cnn-tflite"
  },
  {
    name: "Gas Leakage Detection",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Gas Leakage Detection", "Indoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Indoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Gas leakage detection", "Safety monitoring", "Hazard detection", "Home safety"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "Stove/Induction Left-on Detection",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Stove/Induction Left-on Detection", "Indoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Indoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Stove/induction left-on detection", "Kitchen safety", "Energy monitoring", "Home automation"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "Short-circuit/Sparking Detection",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Short-circuit/Sparking Detection", "Indoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Indoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Short-circuit/sparking detection", "Electrical safety", "Hazard detection", "Preventive maintenance"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "Overheating Appliance Detection",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Overheating Appliance Detection", "Indoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Indoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Overheating appliance detection", "Safety monitoring", "Preventive maintenance", "Energy efficiency"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "Child Unattended Detection",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Child Unattended Detection", "Indoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Indoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Child unattended near balcony/window", "Child safety", "Surveillance", "Home security"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "Pet Activity Monitoring",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Pet Activity Monitoring", "Indoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Indoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Pet activity monitoring (distress, unusual movement)", "Pet care", "Animal monitoring", "Home automation"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "Elderly Wandering Detection",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Elderly Wandering Detection", "Indoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Indoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Elderly wandering at night", "Elderly care", "Safety monitoring", "Healthcare"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "Anomaly Detection TFLite",
    description: "Anomaly detection model using TensorFlow Lite, suitable for intrusion.",
    image: getModelImage("Anomaly Detection TFLite", "Indoor"),
    videoUrl: null,
    downloadUrl: "https://github.com/francescogrillea/AnomalyDetectionTFlite",
    rating: 4.3,
    downloads: "380K",
    category: "Indoor",
    updated: "1 week ago",
    size: "22MB",
    featured: false,
    detailedDescription: "Anomaly detection model using TensorFlow Lite, suitable for intrusion.",
    useCases: ["Intrusion alert during night mode", "Anomaly detection", "Security systems", "Surveillance"],
    features: ["Anomaly detection", "Intrusion detection", "Real-time monitoring", "High accuracy"],
    githubUrl: "https://github.com/francescogrillea/AnomalyDetectionTFlite",
    demoReference: "GitHub francescogrillea/AnomalyDetectionTFlite"
  },
  {
    name: "Smart Occupancy Monitoring",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Smart Occupancy Monitoring", "Indoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Indoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Smart occupancy monitoring (who is home, where)", "Home automation", "Occupancy tracking", "Smart home"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "Desk Occupancy Tracking",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Desk Occupancy Tracking", "Indoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Indoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Desk occupancy tracking", "Office management", "Space utilization", "Workplace analytics"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "Meeting Room Utilization Monitoring",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Meeting Room Utilization Monitoring", "Indoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Indoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Meeting room utilization monitoring", "Office management", "Space optimization", "Workplace analytics"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "People Counting for Co-working Spaces",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("People Counting for Co-working Spaces", "Indoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Indoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["People counting for co-working spaces", "Occupancy monitoring", "Space management", "Analytics"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "Employee Posture/Focus Analysis",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Employee Posture/Focus Analysis", "Indoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Indoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Employee posture/focus analysis", "Workplace wellness", "Ergonomics", "Productivity monitoring"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "Safety Gear Detection",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Safety Gear Detection", "Indoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Indoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Safety gear detection in labs/indoor factories", "Workplace safety", "Compliance monitoring", "Industrial safety"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },

  // Outdoor Models
  {
    name: "Intrusion Detection (Perimeter Breach)",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Intrusion Detection (Perimeter Breach)", "Outdoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Outdoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Intrusion detection (perimeter breach)", "Perimeter security", "Outdoor surveillance", "Security systems"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "Weapon Detection",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Weapon Detection", "Outdoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Outdoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Weapon detection (knife/gun)", "Security systems", "Public safety", "Surveillance"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "Suspicious Loitering Alert",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Suspicious Loitering Alert", "Outdoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Outdoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Suspicious loitering alert", "Security monitoring", "Behavior analysis", "Public safety"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "Abandoned Object Detection",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Abandoned Object Detection", "Outdoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Outdoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Abandoned object detection (bag/package)", "Security monitoring", "Threat detection", "Public safety"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "Crowd Aggression Detection",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Crowd Aggression Detection", "Outdoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Outdoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Crowd aggression detection", "Public safety", "Crowd monitoring", "Security systems"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "ANPR (Automatic Number Plate Recognition)",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("ANPR (Automatic Number Plate Recognition)", "Outdoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Outdoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["ANPR (automatic number plate recognition)", "Traffic monitoring", "Law enforcement", "Parking management"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "Speeding Vehicle Detection",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Speeding Vehicle Detection", "Outdoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Outdoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Speeding vehicle detection", "Traffic enforcement", "Road safety", "Speed monitoring"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "Wrong-way Driving Detection",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Wrong-way Driving Detection", "Outdoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Outdoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Wrong-way driving detection", "Traffic safety", "Road monitoring", "Accident prevention"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "Parking Space Occupancy Detection",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Parking Space Occupancy Detection", "Outdoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Outdoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Parking space occupancy detection", "Parking management", "Smart cities", "Urban planning"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "Vehicle Type Classification",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Vehicle Type Classification", "Outdoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Outdoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Vehicle type classification (car, truck, bike, EV)", "Traffic analysis", "Transportation planning", "Urban monitoring"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "Gunshot Detection",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Gunshot Detection", "Outdoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Outdoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Gunshot detection (audio-visual fusion)", "Public safety", "Security systems", "Emergency response"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "Glass-breaking Sound Detection",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Glass-breaking Sound Detection", "Outdoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Outdoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Glass-breaking sound detection", "Security monitoring", "Audio analysis", "Intrusion detection"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "Firework/Explosion Detection",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Firework/Explosion Detection", "Outdoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Outdoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Firework/explosion detection", "Public safety", "Event monitoring", "Security systems"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "Crowd Density Monitoring",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Crowd Density Monitoring", "Outdoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Outdoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Crowd density monitoring (stampede risk)", "Public safety", "Crowd management", "Event monitoring"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "Public Protest/Rally Monitoring",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Public Protest/Rally Monitoring", "Outdoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Outdoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Public protest/rally monitoring", "Public safety", "Event monitoring", "Security systems"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "PPE Compliance Detection",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("PPE Compliance Detection", "Outdoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Outdoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["PPE compliance (helmets, gloves, vests)", "Workplace safety", "Compliance monitoring", "Industrial safety"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "Unsafe Worker Behavior Detection",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Unsafe Worker Behavior Detection", "Outdoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Outdoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Unsafe worker behavior detection", "Workplace safety", "Behavior monitoring", "Industrial safety"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "Forklift/Machine Collision Risk Alerts",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Forklift/Machine Collision Risk Alerts", "Outdoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Outdoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Forklift/machine collision risk alerts", "Industrial safety", "Collision prevention", "Risk assessment"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "Worker Fatigue Monitoring",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Worker Fatigue Monitoring", "Outdoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Outdoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Worker fatigue monitoring", "Workplace safety", "Health monitoring", "Productivity management"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "Smoke/Fire at Construction Site",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Smoke/Fire at Construction Site", "Outdoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Outdoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Smoke/fire at construction site", "Construction safety", "Fire detection", "Site monitoring"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "Garbage Overflow Detection",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Garbage Overflow Detection", "Outdoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Outdoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Garbage overflow detection in bins", "Waste management", "Smart cities", "Urban monitoring"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "Waterlogging/Flood Detection",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Waterlogging/Flood Detection", "Outdoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Outdoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Waterlogging/flood detection on roads", "Infrastructure monitoring", "Disaster prevention", "Urban planning"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "Wild Animal Intrusion Detection",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Wild Animal Intrusion Detection", "Outdoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Outdoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Wild animal intrusion detection", "Wildlife monitoring", "Agricultural protection", "Environmental monitoring"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "Streetlight Outage Detection",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Streetlight Outage Detection", "Outdoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Outdoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Streetlight outage detection", "Infrastructure monitoring", "Smart cities", "Urban maintenance"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  },
  {
    name: "Weather Anomaly Detection",
    description: "No public TFLite model found for this scenario.",
    image: getModelImage("Weather Anomaly Detection", "Outdoor"),
    videoUrl: null,
    downloadUrl: null,
    rating: 0,
    downloads: "0",
    category: "Outdoor",
    updated: "N/A",
    size: "N/A",
    featured: false,
    detailedDescription: "No public TFLite model found for this scenario.",
    useCases: ["Weather anomaly detection (storm, heavy rain visual cues)", "Weather monitoring", "Climate analysis", "Environmental monitoring"],
    features: ["Not available"],
    githubUrl: null,
    demoReference: "Not Available"
  }
];
